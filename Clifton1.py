# 克利夫顿优势测试，每个主题有3个选项，最后汇总选择结果
'''
克利夫顿优势定义了 34 个才干主题，并把它们归为四个领域：
战略思维：分析、回顾、前瞻、理念、搜集、思维、学习、战略
执行力：成就，统筹，信仰，公平，审慎，纪律，专注，责任，排难
影响力：行动、统率、沟通、竞争、完美、自信、追求、取悦
关系建立：适应、关联、伯乐、体谅、和谐、包容、个别、积极、交往
'''

# 假设的才干主题陈述对
talent_statements = {
    # 战略思维
        "分析": ["我善于识别数据中的趋势。", "我能从复杂数据中提取关键信息。", "我精于利用数据分析解决商业问题。"],
        "回顾": ["我经常反思过去的经验。", "我从历史中找到改进现状的线索。", "我用过去的教训来指导未来的决策。"],
        "前瞻": ["我关注即将来临的机会。", "我能预测和规划未来可能的变化。", "我为未来的挑战和机遇制定策略。"],
        "理念": ["我常思考抽象的理念。", "我能将复杂理念转化为易懂的模型。", "我用创新的理念影响他人的思维。"],
        "搜集": ["我擅长收集必要的信息。", "我从多种渠道搜集深入的资料。", "我为决策搜集和分析全面的数据。"],
        "思维": ["我常进行深度思考。", "我喜欢探索问题的多种可能性。", "我通过复杂的思考过程解决问题。"],
        "学习": ["我喜欢学习新事物。", "我通过持续学习来增强我的知识库。", "我将学习融入日常生活，以不断进步。"],
        "战略": ["我能识别长期目标的优先级。", "我制定有效策略以优化资源利用。", "我引导团队按照明确的战略方向前进。"],
    # 执行力
        "成就": ["我为完成任务感到自豪。", "我追求高效率和高成效。", "我致力于超越常规标准，实现卓越。"],
        "统筹": ["我有效管理我的时间和资源。", "我协调多个项目确保顺利进行。", "我优化流程以提高团队效率。"],
        "信仰": ["我坚持自己的信仰和价值观。", "我的决策反映了我的信仰深度。", "我在工作和生活中秉承我的信念。"],
        "公平": ["我在决策中考虑所有人的利益。", "我力求在团队中实现公正。", "我为维护正义和平等采取行动。"],
        "审慎": ["我在决策前认真考虑所有后果。", "我评估各种方案来避免风险。", "我谨慎行事，以保证最佳结果。"],
        "纪律": ["我保持高度的组织和条理。", "我遵守严格的时间表和规则。", "我用严格的纪律推动自己和团队向前。"],
        "专注": ["我集中精力完成当前任务。", "我排除干扰，保持高效工作。", "我全身心投入到达成目标中。"],
        "责任": ["我对自己的行为负责。", "我承担起领导的责任和后果。", "我确保个人和团队的承诺得到履行。"],
        "排难": ["我解决日常的小问题。", "我应对复杂挑战找到解决方案。", "我克服重大障碍，保证项目成功。"],
    # 影响力
        "行动": ["我通过实际行动展示我的想法。", "我引领变革，通过行动激励他人。", "我实践我的想法，有效推动项目进展。"],
        "统率": ["我指导团队完成任务。", "我领导团队实现具体目标。", "我作为领导者，影响团队文化和成就。"],
        "沟通": ["我清晰表达我的想法和计划。", "我通过有效沟通增强团队合作。", "我是一个出色的沟通者，能影响广泛听众。"],
        "竞争": ["我享受竞争并力争胜出。", "我在竞争中寻找激励自己的方式。", "我把竞争视为提升自我和团队的机会。"],
        "完美": ["我力求每项工作达到高标准。", "我不断追求工作的完美执行。", "我设定极高标准，不断推动自己追求卓越。"],
        "自信": ["我对自己的能力充满信心。", "我在面对挑战时展现自信。", "我用自信影响他人，提升团队士气。"],
        "追求": ["我设定并追求高目标。", "我不断追求职业和个人生活的进步。", "我为实现我的梦想不懈努力。"],
        "取悦": ["我努力让周围的人感到满意。", "我通过我的行为赢得他人的赞赏。", "我在确保所有人都感到高兴和被尊重方面下了很大的功夫。"],
    # 关系建立
        "适应": ["我容易适应新环境和变化。", "我灵活应对各种情况。", "我在变化中找到机会，帮助他人适应。"],
        "关联": ["我寻找和别人的共同点。", "我通过共同点建立强大的联系。", "我用共同的兴趣和目标联络人际关系。"],
        "伯乐": ["我识别他人的才能和潜力。", "我帮助他人发展其职业道路。", "我激励和培养他人实现其最大潜能。"],
        "体谅": ["我理解并关心他人的感受。", "我在团队中扮演调解者的角色。", "我通过同情和理解增强团队凝聚力。"],
        "和谐": ["我寻求和维持团队和谐。", "我解决冲突，确保团队和谐。", "我创造一个无摩擦的工作环境，增加团队效率。"],
        "包容": ["我尊重多样性并包容差异。", "我在团队中促进包容和多样性。", "我创造一个开放的环境，每个人都感到被欣赏和尊重。"],
        "个别": ["我认识到每个人的独特需求。", "我对待每个人都根据其个性和需求。", "我提供个性化的支持，帮助每个人成功。"],
        "积极": ["我总是以积极态度面对挑战。", "我用我的积极性影响和提振他人。", "我创造积极的氛围，使团队保持动力和活力。"],
        "交往": ["我喜欢与人交流和社交。", "我通过社交活动建立广泛的人际网络。", "我利用我的社交技巧在职场和个人生活中建立关系。"]
}

def display_statements(statements):
    """
    显示陈述对供用户选择
    """
    for index, (theme, pair) in enumerate(statements.items(), start=1):
        print(f"{index}. {theme}:")
        print(f"   A. {pair[0]}")
        print(f"   B. {pair[1]}")
        print(f"   C. {pair[2]}")
        print()

def get_user_choices():
    """
    获取用户的选择
    """
    user_choices = []
    for theme, options in talent_statements.items():
        while True:
            choice = input(f"请选择你最认同的陈述（{theme}）：A 或 B 或 C? ").strip().upper()
            if choice in ['A', 'B', 'C']:
                if choice == 'A':
                    user_choices.append(options[0])
                elif choice == 'B':
                    user_choices.append(options[1])
                elif choice == 'C':
                    user_choices.append(options[2])
                break
            else:
                print("无效输入，请重新输入 A 或 B 或 C。")
    return user_choices

def generate_report(user_choices):
    """
    根据用户的选择生成报告
    """
    report = "你的优势评估报告如下：\n"
    report += "你的突出才干主题包括（基于你的陈述选择）：\n"
    for statement in user_choices:
        report += f"- {statement}\n"
    report += "\n这些陈述反映了你在某些方面的优势和特长。请继续发挥你的优势，实现更大的成功！"
    return report

def clifton_strengths_assessment():
    """
    克利夫顿优势评估的简化版本（用户勾选方式）
    """
    print("欢迎参加克利夫顿优势评估！")
    print("请从每对陈述中选择一个最能描述你的选项。")

    # 显示陈述对供用户选择
    display_statements(talent_statements)

    # 获取用户的选择
    user_choices = get_user_choices()

    # 生成并显示报告
    report = generate_report(user_choices)
    print(report)

# 运行评估
clifton_strengths_assessment()


